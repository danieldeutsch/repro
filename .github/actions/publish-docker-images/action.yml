name: "Publish Docker Images"
description: "Publish updated Docker images to DockerHub"
inputs:
  dryrun:
    description: |
      Indicates that the images won't be published, but prints
      what would happen if they were.
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - run: |
        # https://stackoverflow.com/questions/32113330/check-if-imagetag-combination-already-exists-on-docker-hub
        function docker_tag_exists() {
            curl --silent -f -lSL https://index.docker.io/v1/repositories/$1/tags/$2 > /dev/null 2> /dev/null
        }

        python ${{ github.action_path }}/get_image_versions.py --output-file versions.txt

        while IFS=" " read -r model repository version; do
          if docker_tag_exists ${repository} ${version}; then
            echo "Image ${repository}:${version} exists. Skipping."
          else
            echo "Image ${repository}:${version} does not exist. Building and publishing."

            if [ "${{ inputs.dryrun }}" = "false" ]; then
              # Build the image
              repro setup ${model}

              # Push the image to Docker Hub
              docker push ${repository}:${version}

              # Delete all images to save disk space in case we're publishing several
              docker image prune --all --force
            else
              echo "Dryrun: Not building or publishing"
            fi
          fi
        done < versions.txt
      shell: bash